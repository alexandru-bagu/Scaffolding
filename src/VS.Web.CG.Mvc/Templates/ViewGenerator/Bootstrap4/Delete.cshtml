@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@@model @Model.ViewDataTypeName

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:ViewData["Title"] = "@Model.ViewName";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@Model.ViewName</title>
@:</head>
@:<body>
@:
        //    PushIndent("    ");
    }
}

<div class="box">
    <div class="box-header with-border">
        <h2 class="box-title">@@Localization.@(Model.ViewDataTypeShortName).Delete @@Localization.@(Model.ViewDataTypeShortName).Title</h2>
        <span class="pull-right no-margin">
        @{
            string pkName = GetPrimaryKeyName();
            if (pkName != null)
            {
            @:<a class="btn btn-success" href="@@Url.Action("Edit", new { id = @@Model.@pkName })">@@Localization.@(Model.ViewDataTypeShortName).Edit</a>
            @:<sep>|</sep>
            @:<a class="btn btn-success" href="@@Url.Action("Index")">@@Localization.@(Model.ViewDataTypeShortName).Back</a>
            }
            else
            {
            @:<a class="btn btn-success" href="@@Url.Action("Edit", new { /* id = @@Model.PrimaryKey */ })">@@Localization.@(Model.ViewDataTypeShortName).Edit</a>
            @:<sep>|</sep>
            @:<a class="btn btn-success" href="@@Url.Action("Index")">@@Localization.@(Model.ViewDataTypeShortName).Back</a>
            }
        }
        </span>
    </div>
    <!-- /.box-header -->
    <div class="box-body">
        <h3>Are you sure you want to delete this?</h3>
        <dl class="row">
    @{
        Dictionary<string, IPropertyMetadata> propertyLookup = ((IModelMetadata)Model.ModelMetadata).Properties.ToDictionary(x => x.PropertyName, x => x);
        Dictionary<string, INavigationMetadata> navigationLookup = ((IModelMetadata)Model.ModelMetadata).Navigations.ToDictionary(x => x.AssociationPropertyName, x => x);

        foreach (var item in Model.ModelMetadata.ModelType.GetProperties())
        {
            if (propertyLookup.TryGetValue(item.Name, out IPropertyMetadata property)
                && property.Scaffold && !property.IsForeignKey && !property.IsPrimaryKey)
            {
            <dt class="col-sm-2">
                @@Localization.@(Model.ViewDataTypeShortName).@GetValueExpression(property)
            </dt>
            <dd class="col-sm-10">
                @@Html.DisplayFor(model => model.@GetValueExpression(property))
                &nbsp;
            </dd>
            }
            else if (navigationLookup.TryGetValue(item.Name, out INavigationMetadata navigation))
            {
            <dt class = "col-sm-2">
                @@Localization.@(Model.ViewDataTypeShortName).@GetValueExpression(navigation)
            </dt>
            <dd class = "col-sm-10">
                @@Html.DisplayFor(model => model.@GetValueExpression(navigation).@navigation.DisplayPropertyName)
                &nbsp;
            </dd>
            }
        }
    }    </dl>
    @@using (Html.BeginForm()) 
    {
        @@Html.AntiForgeryToken()
        @foreach (var property in Model.ModelMetadata.Properties)
        {
            if(property.IsPrimaryKey){
        @:@@Html.HiddenFor(model => model.@property.PropertyName)
            }
        }
        <div class="form-group">
            <input type="submit" value="@("@Localization."+Model.ViewDataTypeShortName+".Delete")" class="btn btn-danger" />
        </div>
    }
    </div>
<!-- /.box-body -->
</div>

@if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
{
        //ClearIndent();
@:</body>
@:</html>
}

@functions
{
    string GetPrimaryKeyName()
    {
        return (Model.ModelMetadata.PrimaryKeys != null && Model.ModelMetadata.PrimaryKeys.Length == 1)
        ? Model.ModelMetadata.PrimaryKeys[0].PropertyName
        : null;
    }

    string GetValueExpression(IPropertyMetadata property)
    {
        return property.PropertyName;
    }

    string GetValueExpression(INavigationMetadata navigation)
    {
        return navigation.AssociationPropertyName;
    }
}
